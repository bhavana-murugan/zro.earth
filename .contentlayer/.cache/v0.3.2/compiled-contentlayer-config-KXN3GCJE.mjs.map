{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport { convert } from './lib/converter'\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n    slug: {\n        type: 'string',\n        resolve: (doc) => doc._raw.flattenedPath,\n    },\n    // structuredData: {\n    //     type: 'object',\n    //     resolve: (doc) => ({\n    //         '@context': 'https://schema.org',\n    //         '@type': 'BlogPosting',\n    //         title: doc.title,\n    //         slug: doc.slug,\n    //         date: doc.date,\n    //         gist: doc.gist,\n    //         list: doc.list,\n    //         author: {\n    //             '@type': 'Person',\n    //             name: 'Rithik',\n    //         },\n    //     }),\n    // },\n};\n\nexport const Post = defineDocumentType(() => ({\n    name: 'Post',\n    filePathPattern: `**/*.md`,\n    contentType: 'md',\n    fields: {\n        title: {\n            type: 'string',\n            required: true,\n        },\n        date: {\n            type: 'string',\n            required: true,\n        },\n        gist: {\n            type: 'string',\n            required: true,\n        },\n        list: {\n            type: 'string',\n            required: true,\n        }\n    },\n    computedFields,\n}));\n\nexport default makeSource({\n    contentDirPath: '_posts',\n    documentTypes: [Post],\n    mdx: {\n        remarkPlugins: [remarkGfm],\n        rehypePlugins: [\n          rehypeSlug,\n          [\n            rehypePrettyCode,\n            {\n              theme: 'one-dark-pro',\n              onVisitLine(node) {\n                // Prevent lines from collapsing in `display: grid` mode, and allow empty\n                // lines to be copy/pasted\n                if (node.children.length === 0) {\n                  node.children = [{ type: 'text', value: ' ' }];\n                }\n              },\n              onVisitHighlightedLine(node) {\n                node.properties.className.push('line--highlighted');\n              },\n              onVisitHighlightedWord(node) {\n                node.properties.className = ['word--highlighted'];\n              },\n            },\n          ],\n          [\n            rehypeAutolinkHeadings,\n            {\n              properties: {\n                className: ['anchor'],\n              },\n            },\n          ],\n        ],\n      },\n});"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAG/C,IAAM,iBAAiB;AAAA,EACnB,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBJ;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,YAAY,MAAM;AAGhB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACpD;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACN,CAAC;",
  "names": []
}
